
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                         
$ cat create-machine.sh                                                                                                                                         
#!/bin/bash                                                                                                                                                     
                                                                                                                                                                
for i in 1 2 3; do                                                                                                                                              
    docker-machine create -d virtualbox swarm-$i                                                                                                                
done                                                                                                                                                            
                                                                                                                                                                
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                         
$ ./create-machine.sh                                                                                                                                           
Running pre-create checks...                                                                                                                                    
(swarm-1) Default Boot2Docker ISO is out-of-date, downloading the latest release...                                                                             
(swarm-1) Latest release for github.com/boot2docker/boot2docker is v17.09.0-ce                                                                                  
(swarm-1) Downloading C:\Users\senya\.docker\machine\cache\boot2docker.iso from https://github.com/boot2docker/boot2docker/releases/download/v17.09.0-ce/boot2do
ker.iso...                                                                                                                                                      
(swarm-1) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%                                                                             
Creating machine...                                                                                                                                             
(swarm-1) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-1\boot2docker.iso...                    
(swarm-1) Creating VirtualBox VM...                                                                                                                             
(swarm-1) Creating SSH key...                                                                                                                                   
(swarm-1) Starting the VM...                                                                                                                                    
(swarm-1) Check network to re-create if needed...                                                                                                               
(swarm-1) Waiting for an IP...                                                                                                                                  
Waiting for machine to be running, this may take a few minutes...                                                                                               
Detecting operating system of created instance...                                                                                                               
Waiting for SSH to be available...                                                                                                                              
Detecting the provisioner...                                                                                                                                    
Provisioning with boot2docker...                                                                                                                                
Copying certs to the local machine directory...                                                                                                                 
Copying certs to the remote machine...                                                                                                                          
Setting Docker configuration on the remote daemon...                                                                                                            
Checking connection to Docker...                                                                                                                                
Docker is up and running!                                                                                                                                       
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm
1                                                                                                                                                               
Running pre-create checks...                                                                                                                                    
Creating machine...                                                                                                                                             
(swarm-2) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-2\boot2docker.iso...                    
(swarm-2) Creating VirtualBox VM...                                                                                                                             
(swarm-2) Creating SSH key...                                                                                                                                   
(swarm-2) Starting the VM...                                                                                                                                    
(swarm-2) Check network to re-create if needed...                                                                                                               
(swarm-2) Waiting for an IP...                                                                                                                                  
Waiting for machine to be running, this may take a few minutes...                                                                                               
Detecting operating system of created instance...                                                                                                               
Waiting for SSH to be available...                                                                                                                              
Detecting the provisioner...                                                                                                                                    
Provisioning with boot2docker...                                                                                                                                
Copying certs to the local machine directory...                                                                                                                 
Copying certs to the remote machine...                                                                                                                          
Setting Docker configuration on the remote daemon...                                                                                                            
Checking connection to Docker...                                                                                                                                
Docker is up and running!                                                                                                                                       
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm
2                                                                                                                                                               
Running pre-create checks...                                                                                                                                    
Creating machine...                                                                                                                                             
(swarm-3) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-3\boot2docker.iso...                    
(swarm-3) Creating VirtualBox VM...                                                                                                                             
(swarm-3) Creating SSH key...                                                                                                                                   
(swarm-3) Starting the VM...                                                                                                                                    
(swarm-3) Check network to re-create if needed...                                                                                                               
(swarm-3) Waiting for an IP...                                                                                                                                  
Waiting for machine to be running, this may take a few minutes...                                                                                               
Detecting operating system of created instance...                                                                                                               
Waiting for SSH to be available...                                                                                                                              
Detecting the provisioner...                                                                                                                                    
Provisioning with boot2docker...                                                                                                                                
Copying certs to the local machine directory...                                                                                                                 
Copying certs to the remote machine...                                                                                                                          
Setting Docker configuration on the remote daemon...                                                                                                            
Checking connection to Docker...                                                                                                                                
Docker is up and running!                                                                                                                                       
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm
3                                                                                                                                                               
                                                                                                                                                                
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                         
$ 

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)
$ docker-machine ls
NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS
default   *        virtualbox   Running   tcp://192.168.99.100:2376           v17.07.0-ce
swarm-1   -        virtualbox   Running   tcp://192.168.99.105:2376           v17.09.0-ce
swarm-2   -        virtualbox   Running   tcp://192.168.99.106:2376           v17.09.0-ce
swarm-3   -        virtualbox   Running   tcp://192.168.99.107:2376           v17.09.0-ce


Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                                                                                                                                       
$ eval "$(docker-machine env swarm-1)"                                                                          
                                                                                                                
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                         
$ docker-machine ls                                                                                             
NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS              
default   -        virtualbox   Running   tcp://192.168.99.100:2376           v17.07.0-ce                       
swarm-1   *        virtualbox   Running   tcp://192.168.99.105:2376           v17.09.0-ce                       
swarm-2   -        virtualbox   Running   tcp://192.168.99.106:2376           v17.09.0-ce                       
swarm-3   -        virtualbox   Running   tcp://192.168.99.107:2376           v17.09.0-ce                       
                                                                                                                
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                         

$ docker swarm init --advertise-addr $(docker-machine ip swarm-1)                                                                            
Swarm initialized: current node (yecar1k1724th4e6ws8msk07i) is now a manager.                                                                                                                                                                               
                                                                                                                                             
To add a worker to this swarm, run the following command:                                                                                    
                                                                                                                                             
    docker swarm join --token SWMTKN-1-0etn64puo2bv6fs9lw87fytk8sl8u8s7zxdd1l8plm7q6isj5l-9981lu2143cnxgofi7qgbhdei 192.168.99.105:2377      
                                                                                                                                             
To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.                                           
                                                                                                                                             
                                                                                                                                             
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                      
$                                        

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)
$ docker swarm join-token manager
To add a manager to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-0etn64puo2bv6fs9lw87fytk8sl8u8s7zxdd1l8plm7q6isj5l-9yuyeouk0g5r9nb0mym6wzvqx 192.168.99.105:2377

$ docker swarm join-token worker
To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-0etn64puo2bv6fs9lw87fytk8sl8u8s7zxdd1l8plm7q6isj5l-9981lu2143cnxgofi7qgbhdei 192.168.99.105:2377



$ JOIN_TOKEN=$(docker swarm join-token worker)                                                                                                                   	
                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                          
$ echo JOIN_TOKEN                                                                                                                                                
JOIN_TOKEN                                                                                                                                                       
                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                          
$ echo $JOIN_TOKEN                                                                                                                                               
To add a worker to this swarm, run the following command: docker swarm join --token SWMTKN-1-0etn64puo2bv6fs9lw87fytk8sl8u8s7zxdd1l8plm7q6isj5l-9981lu2143cnxgofi
7qgbhdei 192.168.99.105:2377                                                                                                                                     
                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                          
$ docker swarm join-token --help                                                                                                                                 
                                                                                                                                                                 
Usage:  docker swarm join-token [OPTIONS] (worker|manager)                                                                                                       
                                                                                                                                                                 
Manage join tokens                                                                                                                                               
                                                                                                                                                                 
Options:                                                                                                                                                         
      --help     Print usage                                                                                                                                     
  -q, --quiet    Only display token                                                                                                                              
      --rotate   Rotate join token                                                                                                                               
                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                          
$ JOIN_TOKEN=$(docker swarm join-token -q worker)                                                                                                                
                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                          
$ echo $JOIN_TOKEN                                                                                                                                               
SWMTKN-1-0etn64puo2bv6fs9lw87fytk8sl8u8s7zxdd1l8plm7q6isj5l-9981lu2143cnxgofi7qgbhdei                                                                            
                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                          
$                                                                                                                                                                
                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                                                                                                                                                                                    
$ docker-machine ls                                                                                       
NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS        
default   -        virtualbox   Running   tcp://192.168.99.100:2376           v17.07.0-ce                 
swarm-1   *        virtualbox   Running   tcp://192.168.99.105:2376           v17.09.0-ce                 
swarm-2   -        virtualbox   Running   tcp://192.168.99.106:2376           v17.09.0-ce                 
swarm-3   -        virtualbox   Running   tcp://192.168.99.107:2376           v17.09.0-ce                 
                                                                                                          
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.2 (master)                   
$ docker node ls                                                                                          
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS  
yecar1k1724th4e6ws8msk07i *   swarm-1             Ready               Active              Leader          
        
$ docker-machine rm -f swarm-1 swarm-2 swarm-3
About to remove swarm-1, swarm-2, swarm-3
WARNING: This action will delete both local reference and remote instance.
Successfully removed swarm-1
Successfully removed swarm-2
Successfully removed swarm-3

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ docker-machine ls
NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS
default   *        virtualbox   Running   tcp://192.168.99.100:2376           v17.07.0-ce


Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           		
$ ./add-worker-node.sh                                                                                                                                                            
Running pre-create checks...                                                                                                                                                      
Creating machine...                                                                                                                                                               
(swarm-1) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-1\boot2docker.iso...                                      
(swarm-1) Creating VirtualBox VM...                                                                                                                                               
(swarm-1) Creating SSH key...                                                                                                                                                     
(swarm-1) Starting the VM...                                                                                                                                                      
(swarm-1) Check network to re-create if needed...                                                                                                                                 
(swarm-1) Waiting for an IP...                                                                                                                                                    
Waiting for machine to be running, this may take a few minutes...                                                                                                                 
Detecting operating system of created instance...                                                                                                                                 
Waiting for SSH to be available...                                                                                                                                                
Detecting the provisioner...                                                                                                                                                      
Provisioning with boot2docker...                                                                                                                                                  
Copying certs to the local machine directory...                                                                                                                                   
Copying certs to the remote machine...                                                                                                                                            
Setting Docker configuration on the remote daemon...                                                                                                                              
Checking connection to Docker...                                                                                                                                                  
Docker is up and running!                                                                                                                                                         
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm-1                
Running pre-create checks...                                                                                                                                                      
Creating machine...                                                                                                                                                               
(swarm-2) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-2\boot2docker.iso...                                      
(swarm-2) Creating VirtualBox VM...                                                                                                                                               
(swarm-2) Creating SSH key...                                                                                                                                                     
(swarm-2) Starting the VM...                                                                                                                                                      
(swarm-2) Check network to re-create if needed...                                                                                                                                 
(swarm-2) Waiting for an IP...                                                                                                                                                    
Waiting for machine to be running, this may take a few minutes...                                                                                                                 
Detecting operating system of created instance...                                                                                                                                 
Waiting for SSH to be available...                                                                                                                                                
Detecting the provisioner...                                                                                                                                                      
Provisioning with boot2docker...                                                                                                                                                  
Copying certs to the local machine directory...                                                                                                                                   
Copying certs to the remote machine...                                                                                                                                            
Setting Docker configuration on the remote daemon...                                                                                                                              
Checking connection to Docker...                                                                                                                                                  
Docker is up and running!                                                                                                                                                         
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm-2                
Running pre-create checks...                                                                                                                                                      
Creating machine...                                                                                                                                                               
(swarm-3) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-3\boot2docker.iso...                                      
(swarm-3) Creating VirtualBox VM...                                                                                                                                               
(swarm-3) Creating SSH key...                                                                                                                                                     
(swarm-3) Starting the VM...                                                                                                                                                      
(swarm-3) Check network to re-create if needed...                                                                                                                                 
(swarm-3) Waiting for an IP...                                                                                                                                                    
Waiting for machine to be running, this may take a few minutes...                                                                                                                 
Detecting operating system of created instance...                                                                                                                                 
Waiting for SSH to be available...                                                                                                                                                
Detecting the provisioner...                                                                                                                                                      
Provisioning with boot2docker...                                                                                                                                                  
Copying certs to the local machine directory...                                                                                                                                   
Copying certs to the remote machine...                                                                                                                                            
Setting Docker configuration on the remote daemon...                                                                                                                              
Checking connection to Docker...                                                                                                                                                  
Docker is up and running!                                                                                                                                                         
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm-3                
Swarm initialized: current node (o820uob9vko5m5zvyni7e5rak) is now a manager.                                                                                                     
                                                                                                                                                                                  
To add a worker to this swarm, run the following command:                                                                                                                         
                                                                                                                                                                                  
    docker swarm join --token SWMTKN-1-3ala0qilxyptt47zpbr53nhoc09agtw14w98xzxkv87qexcpug-b9xnoer9m2gxhjb35dwduau8y 192.168.99.108:2377                                           
                                                                                                                                                                                  
To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.                                                                                
                                                                                                                                                                                  
This node joined a swarm as a worker.                                                                                                                                             
This node joined a swarm as a worker.                                                                                                                                             
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker node ls                                                                                                                                                                  
Error response from daemon: This node is not a swarm manager. Use "docker swarm init" or "docker swarm join" to connect this node to swarm and try again.                         
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ eval "$(docker-machine env swarm-1)"                                                                                                                                            
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ eval $(docker-machine env swarm-1)                                                                                                                                              
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker node ls                                                                                                                                                                  
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS                                                                          
o820uob9vko5m5zvyni7e5rak *   swarm-1             Ready               Active              Leader                                                                                  
m7ndyiox5838jnraxpz2wtuwt     swarm-2             Ready               Active                                                                                                      
55xnk5ktfasccyu0v8htukd2f     swarm-3             Ready               Active                                                                                                      
 
 
$ docker-machine ls
NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS
default   -        virtualbox   Running   tcp://192.168.99.100:2376           v17.07.0-ce
swarm-1   *        virtualbox   Running   tcp://192.168.99.108:2376           v17.09.0-ce
swarm-2   -        virtualbox   Running   tcp://192.168.99.109:2376           v17.09.0-ce
swarm-3   -        virtualbox   Running   tcp://192.168.99.110:2376           v17.09.0-ce                                                                                                                                                                               



Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ docker swarm ca --rotate
desired root digest: sha256:a869c20133d1d5180648a96395ba4023b3f56adb899800d3cac37808991a48e2
  rotated TLS certificates:  [==================================================>] 3/3 nodes
  rotated CA certificates:   [==================================================>] 3/3 nodes
-----BEGIN CERTIFICATE-----
MIIBajCCARCgAwIBAgIUNlC/S39I4M2/tDS36jkFMQqOP1UwCgYIKoZIzj0EAwIw
EzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcxMDA3MjM1NjAwWhcNMzcxMDAyMjM1
NjAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH
A0IABEzS6ZYCe5orAtM6NsA7zfdUG7n0hpJDgJxF9SPe3Z3eAMYHQ4cu98wu5Y/i
auZ7i1kCa7TLc3amAD9YcEY0nv6jQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
Af8EBTADAQH/MB0GA1UdDgQWBBShrkCS5bGWwkrlKoK6wRkWLVVkQDAKBggqhkjO
PQQDAgNIADBFAiEAoWQUOwzHVBv6y233OTDr0ZPrnPe9GYL3v9YXaVkQld4CIGqb
bu1579kFx4sChY/6eE7thhAoui3fxGsOPlGX0lu9
-----END CERTIFICATE-----

 Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ docker-machine rm -f swarm-1 swarm-2 swarm-3
About to remove swarm-1, swarm-2, swarm-3
WARNING: This action will delete both local reference and remote instance.
Successfully removed swarm-1
Successfully removed swarm-2
Successfully removed swarm-3

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ ll
total 6
-rwxr-xr-x 1 Simeon 197121 464 Oct  7 19:51 add-worker-node.sh*
-rwxr-xr-x 1 Simeon 197121 695 Jul 22 11:26 create-machine.sh*
-rwxr-xr-x 1 Simeon 197121  71 Jul 22 11:25 destroy-machine.sh*

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ ./create-machine.sh                                                                                                                                                             
Running pre-create checks...                                                                                                                                                      Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
Creating machine...                                                                                                                                                               $ docker-machine ls
(swarm-1) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-1\boot2docker.iso...                                      NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS
(swarm-1) Creating VirtualBox VM...                                                                                                                                               default   *        virtualbox   Running   tcp://192.168.99.100:2376           v17.07.0-ce
(swarm-1) Creating SSH key...                                                                                                                                                     swarm-1   -        virtualbox   Running   tcp://192.168.99.117:2376           v17.09.0-ce
(swarm-1) Starting the VM...                                                                                                                                                      swarm-2   -        virtualbox   Running   tcp://192.168.99.118:2376           v17.09.0-ce
(swarm-1) Check network to re-create if needed...                                                                                                                                 swarm-3   -        virtualbox   Running   tcp://192.168.99.119:2376           v17.09.0-ce
(swarm-1) Waiting for an IP...                                                                                                                                                    
Waiting for machine to be running, this may take a few minutes...                                                                                                                 Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
Detecting operating system of created instance...                                                                                                                                 $ docker-machine ip swarm-1
Waiting for SSH to be available...                                                                                                                                                192.168.99.117                                                                                                                                                                                 
Detecting the provisioner...                                                                                                                                                      
Provisioning with boot2docker...                                                                                                                                                  
Copying certs to the local machine directory...                                                                                                                                   
Copying certs to the remote machine...                                                                                                                                            
Setting Docker configuration on the remote daemon...                                                                                                                              
Checking connection to Docker...                                                                                                                                                  
Docker is up and running!                                                                                                                                                         
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm-1                
Running pre-create checks...                                                                                                                                                      
Creating machine...                                                                                                                                                               
(swarm-2) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-2\boot2docker.iso...                                      
(swarm-2) Creating VirtualBox VM...                                                                                                                                               
(swarm-2) Creating SSH key...                                                                                                                                                     
(swarm-2) Starting the VM...                                                                                                                                                      
(swarm-2) Check network to re-create if needed...                                                                                                                                 
(swarm-2) Waiting for an IP...                                                                                                                                                    
Waiting for machine to be running, this may take a few minutes...                                                                                                                 
Detecting operating system of created instance...                                                                                                                                 
Waiting for SSH to be available...                                                                                                                                                
Detecting the provisioner...                                                                                                                                                      
Provisioning with boot2docker...                                                                                                                                                  
Copying certs to the local machine directory...                                                                                                                                   
Copying certs to the remote machine...                                                                                                                                            
Setting Docker configuration on the remote daemon...                                                                                                                              
Checking connection to Docker...                                                                                                                                                  
Docker is up and running!                                                                                                                                                         
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm-2                
Running pre-create checks...                                                                                                                                                      
Creating machine...                                                                                                                                                               
(swarm-3) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-3\boot2docker.iso...                                      
(swarm-3) Creating VirtualBox VM...                                                                                                                                               
(swarm-3) Creating SSH key...                                                                                                                                                     
(swarm-3) Starting the VM...                                                                                                                                                      
(swarm-3) Check network to re-create if needed...                                                                                                                                 
(swarm-3) Waiting for an IP...                                                                                                                                                    
Waiting for machine to be running, this may take a few minutes...                                                                                                                 
Detecting operating system of created instance...                                                                                                                                 
Waiting for SSH to be available...                                                                                                                                                
Detecting the provisioner...                                                                                                                                                      
Provisioning with boot2docker...                                                                                                                                                  
Copying certs to the local machine directory...                                                                                                                                   
Copying certs to the remote machine...                                                                                                                                            
Setting Docker configuration on the remote daemon...                                                                                                                              
Checking connection to Docker...                                                                                                                                                  
Docker is up and running!                                                                                                                                                         
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm-3                
Swarm initialized: current node (zq79b3xiste9xiycqcs154uiv) is now a manager.                                                                                                     
                                                                                                                                                                                  
To add a worker to this swarm, run the following command:                                                                                                                         
                                                                                                                                                                                  
    docker swarm join --token SWMTKN-1-68xhtqnjm2cs8j5g8fqal63mmsxxtpb2cr69bk0klyy0atwz1e-6shbygsve4q7rj7dakf7rnorh 192.168.99.117:2377                                           
                                                                                                                                                                                  
To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.                                                                                
                                                                                                                                                                                  
This node joined a swarm as a worker.                                                                                                                                             
This node joined a swarm as a worker.                                                                                                                                             
x5jvrh3grfg10pxmgq3eztndy                                                                                                                                                         
Since --detach=false was not specified, tasks will be created in the background.                                                                                                  
In a future release, --detach=false will become the default. 

$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE                             PORTS
x5jvrh3grfg1        visualizer          replicated          1/1                 dockersamples/visualizer:latest   *:8000->8080/tcp



Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ docker-machine ls
NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS
default   *        virtualbox   Running   tcp://192.168.99.100:2376           v17.07.0-ce
swarm-1   -        virtualbox   Running   tcp://192.168.99.117:2376           v17.09.0-ce
swarm-2   -        virtualbox   Running   tcp://192.168.99.118:2376           v17.09.0-ce
swarm-3   -        virtualbox   Running   tcp://192.168.99.119:2376           v17.09.0-ce

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ docker-machine ip swarm-1
192.168.99.117     

In the browser: http://192.168.99.117:8000/  shows docker visualizer

Same resulting page would show for: http://192.168.99.118:8000/  and http://192.168.99.119:8000/   

This is Docker routing mesh in action - requests are redirected to the proper node across the cluster.

Networking
----------

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)    
$ docker network ls                                                                          
NETWORK ID          NAME                DRIVER              SCOPE                          
34277665e0f5        bridge              bridge              local                                                                                                                                      
f570021927e0        docker_gwbridge     bridge              local                          
524c6d12d59f        host                host                local                          
r8p37o09u0pq        ingress             overlay             swarm                          
00e1c720006c        none                null                local                          
                                                                                           
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)    
$ docker network create -d overlay routing-mesh                                            
8y6zp1mw8bbyo1lyuyl0uf3o0                                                                  
                                                                                           
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)    
$ docker network ls                                                                        
NETWORK ID          NAME                DRIVER              SCOPE                          
34277665e0f5        bridge              bridge              local                          
f570021927e0        docker_gwbridge     bridge              local                          
524c6d12d59f        host                host                local                          
r8p37o09u0pq        ingress             overlay             swarm                          
00e1c720006c        none                null                local                          
8y6zp1mw8bby        routing-mesh        overlay             swarm   

$ docker service create --name=docker-routing-mesh-svc --publish=8080:8080 --network=routing-mesh albertogviana/docker-routing-mesh:1.0.0
xum6cp7s3g699juqgd7grqrmf
Since --detach=false was not specified, tasks will be created in the background.
In a future release, --detach=false will become the default.

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
tmdcry9edao1v9b9hut2y3dxr *   swarm-1             Ready               Active              Leader
kzpd4d671jxontgmj4umwzmdu     swarm-2             Ready               Active
x8794asq041ys7hc2wq1evur1     swarm-3             Ready               Active

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ docker service ls
ID                  NAME                      MODE                REPLICAS            IMAGE                                     PORTS
3x1onmfsfgk1        visualizer                replicated          1/1                 dockersamples/visualizer:latest           *:8000->8080/tcp
xum6cp7s3g69        docker-routing-mesh-svc   replicated          1/1                 albertogviana/docker-routing-mesh:1.0.0   *:8080->8080/tcp

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ curl $(docker-machine ip swarm-1):8080
The hostname is a00237d05ad4!
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ curl $(docker-machine ip swarm-2):8080
The hostname is a00237d05ad4!
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$ curl $(docker-machine ip swarm-3):8080
The hostname is a00237d05ad4!
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)
$                       


$ docker ps                                                                                                                                                                                                                                                                  
CONTAINER ID        IMAGE                             COMMAND             CREATED             STATUS                       PORTS               NAMES                              
4353bf36920c        dockersamples/visualizer:latest   "npm start"         About an hour ago   Up About an hour (healthy)   8080/tcp            visualizer.1.zetmbwynfl643ql9k41ar6
axc                                                                                                                                                                               
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ eval $(docker-machine env swarm-2)                                                                                                                                              
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker ps                                                                                                                                                                       
CONTAINER ID        IMAGE                                     COMMAND                  CREATED             STATUS                    PORTS               NAMES                    
a00237d05ad4        albertogviana/docker-routing-mesh:1.0.0   "/bin/sh -c docker..."   24 minutes ago      Up 24 minutes (healthy)   8080/tcp            docker-routing-mesh-svc.1
.f8lpml9nhocotncnmeppd69fh 

Scaling Services over encrypted Networking
===========================================

Simeon@LAPTOP-P0PO4U7C MSYS ~                                                                                                                                                                                                                                                                                                            
$ cd /c/Users/senya/source/docker-swarm-course/chapter-2/section-2.5                                                                                                              
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker node ls                                                                                                                                                                  
Error response from daemon: This node is not a swarm manager. Use "docker swarm init" or "docker swarm join" to connect this node to swarm and try again.                         
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker-machine ls                                                                                                                                                               
NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS                                                                                
default   *        virtualbox   Running   tcp://192.168.99.103:2376           v17.09.0-ce                                                                                         
swarm-1   -        virtualbox   Running   tcp://192.168.99.100:2376           v17.09.0-ce                                                                                         
swarm-2   -        virtualbox   Running   tcp://192.168.99.101:2376           v17.09.0-ce                                                                                         
swarm-3   -        virtualbox   Running   tcp://192.168.99.102:2376           v17.09.0-ce                                                                                         
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ eval $(docker-machine env swarm-1)                                                                                                                                              
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker node ls                                                                                                                                                                  
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS                                                                          
kry1zy5piue7uo2l473cxuo1a *   swarm-1             Ready               Active              Leader                                                                                  
i97eu0z4fi4a4ty64jow5mjem     swarm-2             Ready               Active                                                                                                      
z329f2rstt4rcfk5x2gh7n8oy     swarm-3             Ready               Active                                                                                                      
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker network ls                                                                                                                                                               
NETWORK ID          NAME                DRIVER              SCOPE                                                                                                                 
203f0a1e63f9        bridge              bridge              local                                                                                                                 
5323b3ab3302        docker_gwbridge     bridge              local                                                                                                                 
66248d651a88        host                host                local                                                                                                                 
h88i48rjbe8e        ingress             overlay             swarm                                                                                                                 
2e6c5163b807        none                null                local                                                                                                                 
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker network create -d overlay --opt encrypted routing-mesh                                                                                                                   
s7bmgwmdji9o6ybmsw8v6zyc4                                                                                                                                                         
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker network ls                                                                                                                                                               
NETWORK ID          NAME                DRIVER              SCOPE                                                                                                                 
203f0a1e63f9        bridge              bridge              local                                                                                                                 
5323b3ab3302        docker_gwbridge     bridge              local                                                                                                                 
66248d651a88        host                host                local                                                                                                                 
h88i48rjbe8e        ingress             overlay             swarm                                                                                                                 
2e6c5163b807        none                null                local                                                                                                                 
s7bmgwmdji9o        routing-mesh        overlay             swarm                                                                                                                 
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker service ls                                                                                                                                                               
ID                  NAME                MODE                REPLICAS            IMAGE                             PORTS                                                           
at2le0hlbpxs        visualizer          replicated          1/1                 dockersamples/visualizer:latest   *:8000->8080/tcp                                                
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker service create --name=docker-routing-mesh --publish=8080:8080/tcp --network routing-mesh --reserve-memory 20m albertogviana/docker-routing-mesh:1.0.0                    
ve0ulvyhsz47gy5jx0o63of38                                                                                                                                                         
Since --detach=false was not specified, tasks will be created in the background.                                                                                                  
In a future release, --detach=false will become the default.                                                                                                                      
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker service ls                                                                                                                                                               
ID                  NAME                  MODE                REPLICAS            IMAGE                                     PORTS                                                 
at2le0hlbpxs        visualizer            replicated          1/1                 dockersamples/visualizer:latest           *:8000->8080/tcp                                      
ve0ulvyhsz47        docker-routing-mesh   replicated          0/1                 albertogviana/docker-routing-mesh:1.0.0   *:8080->8080/tcp                                      
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ curl 192.168.99.100:8000                                                                                                                                                        
<!doctype html>                                                                                                                                                                   
<html>                                                                                                                                                                            
<head>                                                                                                                                                                            
  <meta charset="utf-8">                                                                                                                                                          
  <title>Visualizer</title>                                                                                                                                                       
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">                                                                                                                  
  <meta name="description" content="">                                                                                                                                            
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">                                                                     
  <link href='//fonts.googleapis.com/css?family=Ubuntu+Mono|Open+Sans:400,700,400italic' rel='stylesheet' type='text/css'>                                                        
  <style type="text/css">                                                                                                                                                         
   .hidden{ display: none; }                                                                                                                                                      
  </style>                                                                                                                                                                        
</head>                                                                                                                                                                           
<body style='background:#254356'>                                                                                                                                                 
  <div class='tabs'>                                                                                                                                                              
    <button id='tab-physical'>                                                                                                                                                    
      <svg xmlns="http://www.w3.org/2000/svg" width="80" height="80" viewBox="0 0 80 80"><path fill="#FFF" d="M14.752 32.456l-7.72.002v7.553h7.72v-7.554zm9.65 0h-7.72v7.556h7.72v
-7.556zm0-9.445h-7.72v7.556h7.72V23.01zm9.65 9.446h-7.72v7.556h7.72v-7.556zm0-9.445h-7.72v7.556h7.72V23.01zm9.648 9.446h-7.72v7.556h7.72v-7.556zm0-9.445h-7.72v7.556h7.72V23.01zm9
.65 9.446l-7.72.002v7.553h7.72v-7.554zm-9.65-18.89h-7.72v7.556h7.72v-7.556zm31.938 23.106c-2.51-1.417-5.85-1.61-8.693-.792-.35-2.958-2.337-5.55-4.7-7.41l-.938-.738-.79.89c-1.58 1
.79-2.052 4.768-1.838 7.053.16 1.68.697 3.388 1.756 4.737-.805.473-1.717.85-2.53 1.12-1.657.55-3.456.854-5.206.854H3.544l-.105 1.107c-.354 3.7.165 7.402 1.728 10.778l.673 1.343.0
78.124c4.622 7.68 12.74 10.914 21.584 10.914 17.125 0 31.248-7.48 37.734-23.284 4.335.222 8.77-1.033 10.89-5.082l.54-1.033-1.028-.578zm-57.77 19.982v.002c-2.18 0-3.955-1.735-3.95
5-3.866 0-2.132 1.774-3.866 3.954-3.866s3.954 1.732 3.954 3.865c0 2.13-1.77 3.864-3.95 3.864zm-.01-5.854c-1.137 0-2.06.9-2.06 2.013 0 1.11.924 2.01 2.06 2.01 1.134 0 2.057-.9 2.0
57-2.01 0-1.11-.922-2.013-2.057-2.013z"/></svg>                                                                                                                                   
    </button>                                                                                                                                                                     
                                                                                                                                                                                  
  </div>                                                                                                                                                                          
  <div id="app">                                                                                                                                                                  
    <!-- content goes here -->                                                                                                                                                    
  </div>                                                                                                                                                                          
                                                                                                                                                                                  
  <script type="text/javascript">                                                                                                                                                 
    window.MS = '1000';                                                                                                                                                           
  </script>                                                                                                                                                                       
  <script type="text/javascript" src="app.js"></script>                                                                                                                           
</body>                                                                                                                                                                           
</html>                                                                                                                                                                           
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ curl 192.168.99.100:8080                                                                                                                                                        
The hostname is c5cdeb85ba19!                                                                                                                                                     
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker service                                                                                                                                                                  
                                                                                                                                                                                  
Usage:  docker service COMMAND                                                                                                                                                    
                                                                                                                                                                                  
Manage services                                                                                                                                                                   
                                                                                                                                                                                  
Options:                                                                                                                                                                          
      --help   Print usage                                                                                                                                                        
                                                                                                                                                                                  
Commands:                                                                                                                                                                         
  create      Create a new service                                                                                                                                                
  inspect     Display detailed information on one or more services                                                                                                                
  logs        Fetch the logs of a service or task                                                                                                                                 
  ls          List services                                                                                                                                                       
  ps          List the tasks of one or more services                                                                                                                              
  rm          Remove one or more services                                                                                                                                         
  scale       Scale one or multiple replicated services                                                                                                                           
  update      Update a service                                                                                                                                                    
                                                                                                                                                                                  
Run 'docker service COMMAND --help' for more information on a command.                                                                                                            
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker service create                                                                                                                                                           
"docker service create" requires at least 1 argument(s).                                                                                                                          
See 'docker service create --help'.                                                                                                                                               
                                                                                                                                                                                  
Usage:  docker service create [OPTIONS] IMAGE [COMMAND] [ARG...]                                                                                                                  
                                                                                                                                                                                  
Create a new service                                                                                                                                                              
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$ docker service create --help                                                                                                                                                    
                                                                                                                                                                                  
Usage:  docker service create [OPTIONS] IMAGE [COMMAND] [ARG...]                                                                                                                  
                                                                                                                                                                                  
Create a new service                                                                                                                                                              
                                                                                                                                                                                  
Options:                                                                                                                                                                          
      --config config                      Specify configurations to                                                                                                              
                                           expose to the service                                                                                                                  
      --constraint list                    Placement constraints                                                                                                                  
      --container-label list               Container labels                                                                                                                       
      --credential-spec credential-spec    Credential spec for managed                                                                                                            
                                           service account (Windows only)                                                                                                         
  -d, --detach                             Exit immediately instead of                                                                                                            
                                           waiting for the service to                                                                                                             
                                           converge (default true)                                                                                                                
      --dns list                           Set custom DNS servers                                                                                                                 
      --dns-option list                    Set DNS options                                                                                                                        
      --dns-search list                    Set custom DNS search domains                                                                                                          
      --endpoint-mode string               Endpoint mode (vip or dnsrr)                                                                                                           
                                           (default "vip")                                                                                                                        
      --entrypoint command                 Overwrite the default                                                                                                                  
                                           ENTRYPOINT of the image                                                                                                                
  -e, --env list                           Set environment variables                                                                                                              
      --env-file list                      Read in a file of environment                                                                                                          
                                           variables                                                                                                                              
      --group list                         Set one or more supplementary                                                                                                          
                                           user groups for the container                                                                                                          
      --health-cmd string                  Command to run to check health                                                                                                         
      --health-interval duration           Time between running the check                                                                                                         
                                           (ms|s|m|h)                                                                                                                             
      --health-retries int                 Consecutive failures needed to                                                                                                         
                                           report unhealthy                                                                                                                       
      --health-start-period duration       Start period for the container                                                                                                         
                                           to initialize before counting                                                                                                          
                                           retries towards unstable (ms|s|m|h)                                                                                                    
      --health-timeout duration            Maximum time to allow one                                                                                                              
                                           check to run (ms|s|m|h)                                                                                                                
      --help                               Print usage                                                                                                                            
      --host list                          Set one or more custom                                                                                                                 
                                           host-to-IP mappings (host:ip)                                                                                                          
      --hostname string                    Container hostname                                                                                                                     
  -l, --label list                         Service labels                                                                                                                         
      --limit-cpu decimal                  Limit CPUs                                                                                                                             
      --limit-memory bytes                 Limit Memory                                                                                                                           
      --log-driver string                  Logging driver for service                                                                                                             
      --log-opt list                       Logging driver options                                                                                                                 
      --mode string                        Service mode (replicated or                                                                                                            
                                           global) (default "replicated")                                                                                                         
      --mount mount                        Attach a filesystem mount to                                                                                                           
                                           the service                                                                                                                            
      --name string                        Service name                                                                                                                           
      --network network                    Network attachments                                                                                                                    
      --no-healthcheck                     Disable any                                                                                                                            
                                           container-specified HEALTHCHECK                                                                                                        
      --no-resolve-image                   Do not query the registry to                                                                                                           
                                           resolve image digest and                                                                                                               
                                           supported platforms                                                                                                                    
      --placement-pref pref                Add a placement preference                                                                                                             
  -p, --publish port                       Publish a port as a node port                                                                                                          
  -q, --quiet                              Suppress progress output                                                                                                               
      --read-only                          Mount the container's root                                                                                                             
                                           filesystem as read only                                                                                                                
      --replicas uint                      Number of tasks                                                                                                                        
      --reserve-cpu decimal                Reserve CPUs                                                                                                                           
      --reserve-memory bytes               Reserve Memory                                                                                                                         
      --restart-condition string           Restart when condition is met                                                                                                          
                                           ("none"|"on-failure"|"any")                                                                                                            
                                           (default "any")                                                                                                                        
      --restart-delay duration             Delay between restart attempts                                                                                                         
                                           (ns|us|ms|s|m|h) (default 5s)                                                                                                          
      --restart-max-attempts uint          Maximum number of restarts                                                                                                             
                                           before giving up                                                                                                                       
      --restart-window duration            Window used to evaluate the                                                                                                            
                                           restart policy (ns|us|ms|s|m|h)                                                                                                        
      --rollback-delay duration            Delay between task rollbacks                                                                                                           
                                           (ns|us|ms|s|m|h) (default 0s)                                                                                                          
      --rollback-failure-action string     Action on rollback failure                                                                                                             
                                           ("pause"|"continue") (default                                                                                                          
                                           "pause")                                                                                                                               
      --rollback-max-failure-ratio float   Failure rate to tolerate                                                                                                               
                                           during a rollback (default 0)                                                                                                          
      --rollback-monitor duration          Duration after each task                                                                                                               
                                           rollback to monitor for                                                                                                                
                                           failure (ns|us|ms|s|m|h)                                                                                                               
                                           (default 5s)                                                                                                                           
      --rollback-order string              Rollback order                                                                                                                         
                                           ("start-first"|"stop-first")                                                                                                           
                                           (default "stop-first")                                                                                                                 
      --rollback-parallelism uint          Maximum number of tasks rolled                                                                                                         
                                           back simultaneously (0 to roll                                                                                                         
                                           back all at once) (default 1)                                                                                                          
      --secret secret                      Specify secrets to expose to                                                                                                           
                                           the service                                                                                                                            
      --stop-grace-period duration         Time to wait before force                                                                                                              
                                           killing a container                                                                                                                    
                                           (ns|us|ms|s|m|h) (default 10s)                                                                                                         
      --stop-signal string                 Signal to stop the container                                                                                                           
  -t, --tty                                Allocate a pseudo-TTY                                                                                                                  
      --update-delay duration              Delay between updates                                                                                                                  
                                           (ns|us|ms|s|m|h) (default 0s)                                                                                                          
      --update-failure-action string       Action on update failure                                                                                                               
                                           ("pause"|"continue"|"rollback") (default "pause")                                                                                      
      --update-max-failure-ratio float     Failure rate to tolerate                                                                                                               
                                           during an update (default 0)                                                                                                           
      --update-monitor duration            Duration after each task                                                                                                               
                                           update to monitor for failure                                                                                                          
                                           (ns|us|ms|s|m|h) (default 5s)                                                                                                          
      --update-order string                Update order                                                                                                                           
                                           ("start-first"|"stop-first")                                                                                                           
                                           (default "stop-first")                                                                                                                 
      --update-parallelism uint            Maximum number of tasks                                                                                                                
                                           updated simultaneously (0 to                                                                                                           
                                           update all at once) (default 1)                                                                                                        
  -u, --user string                        Username or UID (format:                                                                                                               
                                           <name|uid>[:<group|gid>])                                                                                                              
      --with-registry-auth                 Send registry authentication                                                                                                           
                                           details to swarm agents                                                                                                                
  -w, --workdir string                     Working directory inside the                                                                                                           
                                           container                                                                                                                              
                                                                                                                                                                                  
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                           
$                                                                                                                                                                                 

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                                                                                                                      
$ curl $(docker-machine ip swarm-1):8080                                                   
The hostname is c5cdeb85ba19!                                                              
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)    
$ curl $(docker-machine ip swarm-2):8080                                                   
The hostname is c5cdeb85ba19!                                                              
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)    
$ curl $(docker-machine ip swarm-3):8080                                                   
The hostname is c5cdeb85ba19!                                                              
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)    
$ 

$ while true; do curl http://$(docker-machine ip swarm-1):8080; sleep 1; printf "\n"; done
The hostname is c9ab47e6e387!
The hostname is b41faa8e1926!
The hostname is 6a5f2855cd85!
The hostname is e3274e70964e!
The hostname is 2a441221ba37!
The hostname is bf39ae6958cb!
The hostname is b03250313ff8!
The hostname is c5cdeb85ba19!
The hostname is f9cbd7b427be!
The hostname is df82aef562ba!
The hostname is c9ab47e6e387!
The hostname is b41faa8e1926!                                                  


Piping into Jq
---------------
$ docker-machine inspect | jq -C .                                                                                         
{                                                                                                                          
  "ConfigVersion": 3,                                                                                                      
  "Driver": {                                                                                                              
    "IPAddress": "192.168.99.103",                                                                                         
    "MachineName": "default",                                                                                              
    "SSHUser": "docker",                                                                                                   
    "SSHPort": 60079,                                                                                                      
    "SSHKeyPath": "C:\\Users\\senya\\.docker\\machine\\machines\\default\\id_rsa",                                         
    "StorePath": "C:\\Users\\senya\\.docker\\machine",                                                                     
    "SwarmMaster": false,                                                                                                  
    "SwarmHost": "tcp://0.0.0.0:3376",                                                                                     
    "SwarmDiscovery": "",                                                                                                  
    "VBoxManager": {},                                                                                                     
    "HostInterfaces": {},                                                                                                  
    "CPU": 1,                                                                                                              
    "Memory": 1024,                                                                                                        
    "DiskSize": 20000,                                                                                                     
    "NatNicType": "82540EM",                                                                                               
    "Boot2DockerURL": "",                                                                                                  
    "Boot2DockerImportVM": "",                                                                                             
    "HostDNSResolver": false,                                                                                              
    "HostOnlyCIDR": "192.168.99.1/24",                                                                                     
    "HostOnlyNicType": "82540EM",                                                                                          
    "HostOnlyPromiscMode": "deny",                                                                                         
    "UIType": "headless",                                                                                                  
    "HostOnlyNoDHCP": false,                                                                                               
    "NoShare": false,                                                                                                      
    "DNSProxy": true,                                                                                                      
    "NoVTXCheck": false,                                                                                                   
    "ShareFolder": ""                                                                                                      
  },                                                                                                                       
  "DriverName": "virtualbox",                                                                                              
  "HostOptions": {                                                                                                         
    "Driver": "",                                                                                                          
    "Memory": 0,                                                                                                           
    "Disk": 0,                                                                                                             
    "EngineOptions": {                                                                                                     
      "ArbitraryFlags": [],                                                                                                
      "Dns": null,                                                                                                         
      "GraphDir": "",                                                                                                      
      "Env": [],                                                                                                           
      "Ipv6": false,                                                                                                       
      "InsecureRegistry": [],                                                                                              
      "Labels": [],                                                                                                        
      "LogLevel": "",                                                                                                      
      "StorageDriver": "",                                                                                                 
      "SelinuxEnabled": false,                                                                                             
      "TlsVerify": true,                                                                                                   
      "RegistryMirror": [],                                                                                                
      "InstallURL": "https://get.docker.com"                                                                               
    },                                                                                                                     
    "SwarmOptions": {                                                                                                      
      "IsSwarm": false,                                                                                                    
      "Address": "",                                                                                                       
      "Discovery": "",                                                                                                     
      "Agent": false,                                                                                                      
      "Master": false,                                                                                                     
      "Host": "tcp://0.0.0.0:3376",                                                                                        
      "Image": "swarm:latest",                                                                                             
      "Strategy": "spread",                                                                                                
      "Heartbeat": 0,                                                                                                      
      "Overcommit": 0,                                                                                                     
      "ArbitraryFlags": [],                                                                                                
      "ArbitraryJoinFlags": [],                                                                                            
      "Env": null,                                                                                                         
      "IsExperimental": false                                                                                              
    },                                                                                                                     
    "AuthOptions": {                                                                                                       
      "CertDir": "C:\\Users\\senya\\.docker\\machine\\certs",                                                              
      "CaCertPath": "C:\\Users\\senya\\.docker\\machine\\certs\\ca.pem",                                                   
      "CaPrivateKeyPath": "C:\\Users\\senya\\.docker\\machine\\certs\\ca-key.pem",                                         
      "CaCertRemotePath": "",                                                                                              
      "ServerCertPath": "C:\\Users\\senya\\.docker\\machine\\machines\\default\\server.pem",                               
      "ServerKeyPath": "C:\\Users\\senya\\.docker\\machine\\machines\\default\\server-key.pem",                            
      "ClientKeyPath": "C:\\Users\\senya\\.docker\\machine\\certs\\key.pem",                                               
      "ServerCertRemotePath": "",                                                                                          
      "ServerKeyRemotePath": "",                                                                                           
      "ClientCertPath": "C:\\Users\\senya\\.docker\\machine\\certs\\cert.pem",                                             
      "ServerCertSANs": [],                                                                                                
      "StorePath": "C:\\Users\\senya\\.docker\\machine\\machines\\default"                                                 
    }                                                                                                                      
  },                                                                                                                       
  "Name": "default"                                                                                                        
}                  

Docker Secrets
---------------

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)                                                                                                          
$ echo 'this is my secret' | docker secret create my_secret -                            
Error reading content from "-": Incorrect function.   

see https://stackoverflow.com/questions/46633885/unable-to-create-a-docker-secret-from-stdin                                   
                                                                                         
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)  
$ docker-machine version                                                                 
docker-machine.exe version 0.12.2, build 9371605                                         
                                                                                         
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)  
$ docker secret ls                                                                       
ID                  NAME                CREATED             UPDATED                      
                                                                                         
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)  
$ docker secret create my_secret ./secret.txt                                            
ulec3yck5jpwywg6o7ptxnun7                                                                
                                                                                         
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-2/section-2.5 (master)  
$ docker secret ls                                                                       
ID                          NAME                CREATED             UPDATED              
ulec3yck5jpwywg6o7ptxnun7   my_secret           43 seconds ago      43 seconds ago       