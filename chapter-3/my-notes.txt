$ cat Dockerfile                                                                                                                                                                                                                 
FROM golang:alpine AS build                                                                                            
                                                                                                                       
WORKDIR /go/src/bitbucket.org/albertogviana/go-microservice/names/                                                     
COPY . .                                                                                                               
                                                                                                                       
RUN apk update && \                                                                                                    
  apk add git &&\                                                                                                      
  go get gopkg.in/mgo.v2 && \                                                                                          
  go build -v -o names-demo                                                                                            
                                                                                                                       
                                                                                                                       
                                                                                                                       
FROM alpine                                                                                                            
                                                                                                                       
EXPOSE 8080                                                                                                            
                                                                                                                       
ENV APP_VERSION 1.0.0                                                                                                  
                                                                                                                       
COPY --from=build /go/src/bitbucket.org/albertogviana/go-microservice/names/names-demo /usr/local/bin/names-demo       
                                                                                                                       
RUN chmod +x /usr/local/bin/names-demo                                                                                 
                                                                                                                       
HEALTHCHECK --interval=10s CMD wget -qO- localhost:8080/health                                                         
                                                                                                                       
CMD ["names-demo"]                                                                                                     
          

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source/names (master)                                                                             
$ docker build -t sleyzezon/names-demo .                                                                                                                                         
Sending build context to Docker daemon  10.24kB                                                                                                                                  
Step 1/11 : FROM golang:alpine AS build                                                                                                                                          
alpine: Pulling from library/golang                                                                                                                                              
88286f41530e: Pull complete                                                                                                                                                      
3f27971ac235: Pull complete                                                                                                                                                      
d3324d2049d6: Pull complete                                                                                                                                                      
ca1727e0a894: Pull complete                                                                                                                                                      
905890d9f326: Pull complete                                                                                                                                                      
5323a74c388a: Pull complete                                                                                                                                                      
Digest: sha256:acbbbac5fdc7acda7f758b34807350ce691eb509ca64bd3c9f8af7a58438043d                                                                                                  
Status: Downloaded newer image for golang:alpine                                                                                                                                 
 ---> 107ed76bfbd2                                                                                                                                                               
Step 2/11 : WORKDIR /go/src/bitbucket.org/albertogviana/go-microservice/names/                                                                                                   
 ---> e5f838d25a67                                                                                                                                                               
Removing intermediate container 1b2d53694ef3                                                                                                                                     
Step 3/11 : COPY . .                                                                                                                                                             
 ---> 321e4bed9697                                                                                                                                                               
Step 4/11 : RUN apk update &&   apk add git &&  go get gopkg.in/mgo.v2 &&   go build -v -o names-demo                                                                            
 ---> Running in b3c33758a02f                                                                                                                                                    
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/main/x86_64/APKINDEX.tar.gz                                                                                                      
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/community/x86_64/APKINDEX.tar.gz                                                                                                 
v3.6.2-159-geb4330dc29 [http://dl-cdn.alpinelinux.org/alpine/v3.6/main]                                                                                                          
v3.6.2-156-g9136e1f1bd [http://dl-cdn.alpinelinux.org/alpine/v3.6/community]                                                                                                     
OK: 8441 distinct packages available                                                                                                                                             
(1/5) Installing libssh2 (1.8.0-r1)                                                                                                                                              
(2/5) Installing libcurl (7.56.0-r0)                                                                                                                                             
(3/5) Installing expat (2.2.0-r1)                                                                                                                                                
(4/5) Installing pcre (8.41-r0)                                                                                                                                                  
(5/5) Installing git (2.13.5-r0)                                                                                                                                                 
Executing busybox-1.26.2-r5.trigger                                                                                                                                              
OK: 25 MiB in 17 packages                                                                                                                                                        
bitbucket.org/albertogviana/go-microservice/names/models                                                                                                                         
bitbucket.org/albertogviana/go-microservice/names                                                                                                                                
 ---> fc70c7c05d2b                                                                                                                                                               
Removing intermediate container b3c33758a02f                                                                                                                                     
Step 5/11 : FROM alpine                                                                                                                                                          
latest: Pulling from library/alpine                                                                                                                                              
88286f41530e: Already exists                                                                                                                                                     
Digest: sha256:f006ecbb824d87947d0b51ab8488634bf69fe4094959d935c0c103f4820a417d                                                                                                  
Status: Downloaded newer image for alpine:latest                                                                                                                                 
 ---> 76da55c8019d                                                                                                                                                               
Step 6/11 : EXPOSE 8080                                                                                                                                                          
 ---> Running in 1369b1bb76d0                                                                                                                                                    
 ---> 4a9444cffdd4                                                                                                                                                               
Removing intermediate container 1369b1bb76d0                                                                                                                                     
Step 7/11 : ENV APP_VERSION 1.0.0                                                                                                                                                
 ---> Running in 2dcd44561413                                                                                                                                                    
 ---> 6cebc5b490da                                                                                                                                                               
Removing intermediate container 2dcd44561413                                                                                                                                     
Step 8/11 : COPY --from=build /go/src/bitbucket.org/albertogviana/go-microservice/names/names-demo /usr/local/bin/names-demo                                                     
 ---> d79ced237f0e                                                                                                                                                               
Step 9/11 : RUN chmod +x /usr/local/bin/names-demo                                                                                                                               
 ---> Running in e89fce6187a3                                                                                                                                                    
 ---> 0f4ac6da9072                                                                                                                                                               
Removing intermediate container e89fce6187a3                                                                                                                                     
Step 10/11 : HEALTHCHECK --interval=10s CMD wget -qO- localhost:8080/health                                                                                                      
 ---> Running in fcade01c2467                                                                                                                                                    
 ---> a1eebe077b6b                                                                                                                                                               
Removing intermediate container fcade01c2467                                                                                                                                     
Step 11/11 : CMD names-demo                                                                                                                                                      
 ---> Running in c2abd5c3f3e6                                                                                                                                                    
 ---> e98ed89983ac                                                                                                                                                               
Removing intermediate container c2abd5c3f3e6                                                                                                                                     
Successfully built e98ed89983ac                                                                                                                                                  
Successfully tagged sleyzezon/names-demo:latest                                                                                                                                  
SECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have '-rwxr-xr-x' permiss
ons. It is recommended to double check and reset permissions for sensitive files and directories.                                                                                
                                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source/names (master)                                                                             
$ docker images                                                                                                                                                                  
REPOSITORY             TAG                 IMAGE ID            CREATED             SIZE                                                                                          
sleyzezon/names-demo   latest              e98ed89983ac        22 seconds ago      18.5MB                                                                                        
<none>                 <none>              fc70c7c05d2b        24 seconds ago      309MB                                                                                         
golang                 alpine              107ed76bfbd2        4 days ago          270MB                                                                                         
alpine                 latest              76da55c8019d        3 weeks ago         3.97MB                                                                                        
                                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source/names (master)                                                                             
$ docker push sleyzezon/names-demo                                                                                                                                               
The push refers to a repository [docker.io/sleyzezon/names-demo]                                                                                                                 
f9ab92b0ff64: Pushed                                                                                                                                                             
5bef08742407: Mounted from library/alpine                                                                                                                                        
latest: digest: sha256:47d8d3d9ba1a9d5b64307da8dea9249db2d19588ad034419b741758e2328c60e size: 950                                                                                
                                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source/names (master)                                                                             
$                                                                                                                                                                                
Repo created on docker hub: https://hub.docker.com/r/sleyzezon/names-demo/

Was created as private.  Must be changed to public on the Docker Hub to enable further pull!!!!!


Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)                                                                                                                                                                                                    
$ ll                                                                                                             
total 5                                                                                                          
-rwxr-xr-x 1 Simeon 197121 723 Oct  7 21:05 create-machine.sh*                                                   
-rwxr-xr-x 1 Simeon 197121  71 Jul 22 11:25 destroy-machine.sh*                                                  
drwxr-xr-x 1 Simeon 197121   0 Jul 23 23:00 names/                                                               
drwxr-xr-x 1 Simeon 197121   0 Oct  8 18:39 xx-not-used/                                                         
                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)                   
$ pwd                                                                                                            
/c/Users/senya/source/docker-swarm-course/chapter-3/section-3.1/source                                           
                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)                   
$ ./destroy-machine.sh                                                                                           
About to remove swarm-1                                                                                          
WARNING: This action will delete both local reference and remote instance.                                       
Successfully removed swarm-1                                                                                     
About to remove swarm-2                                                                                          
WARNING: This action will delete both local reference and remote instance.                                       
Successfully removed swarm-2                                                                                     
About to remove swarm-3                                                                                          
WARNING: This action will delete both local reference and remote instance.                                       
Successfully removed swarm-3                                                                                     
                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)                   
$                                                                                                                

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)                                                                                                                                                                                                    
$ ./create-machine.sh                                                                                                                                                                                                                                                                             
Running pre-create checks...                                                                                                                                                     
Creating machine...                                                                                                                                                              
(swarm-1) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-1\boot2docker.iso...                                     
(swarm-1) Creating VirtualBox VM...                                                                                                                                              
(swarm-1) Creating SSH key...                                                                                                                                                    
(swarm-1) Starting the VM...                                                                                                                                                     
(swarm-1) Check network to re-create if needed...                                                                                                                                
(swarm-1) Waiting for an IP...                                                                                                                                                   
Waiting for machine to be running, this may take a few minutes...                                                                                                                
Detecting operating system of created instance...                                                                                                                                
Waiting for SSH to be available...                                                                                                                                               
Detecting the provisioner...                                                                                                                                                     
Provisioning with boot2docker...                                                                                                                                                 
Copying certs to the local machine directory...                                                                                                                                  
Copying certs to the remote machine...                                                                                                                                           
Setting Docker configuration on the remote daemon...                                                                                                                             
                                                                                                                                                                                 
This machine has been allocated an IP address, but Docker Machine could not                                                                                                      
reach it successfully.                                                                                                                                                           
                                                                                                                                                                                 
SSH for the machine should still work, but connecting to exposed ports, such as                                                                                                  
the Docker daemon port (usually <ip>:2376), may not work properly.                                                                                                               
                                                                                                                                                                                 
You may need to add the route manually, or use another related workaround.                                                                                                       
                                                                                                                                                                                 
This could be due to a VPN, proxy, or host file configuration issue.                                                                                                             
                                                                                                                                                                                 
You also might want to clear any VirtualBox host only interfaces you are not using.                                                                                              
Checking connection to Docker...                                                                                                                                                 
Docker is up and running!                                                                                                                                                        
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm-1               
Running pre-create checks...                                                                                                                                                     
Creating machine...                                                                                                                                                              
(swarm-2) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-2\boot2docker.iso...                                     
(swarm-2) Creating VirtualBox VM...                                                                                                                                              
(swarm-2) Creating SSH key...                                                                                                                                                    
(swarm-2) Starting the VM...                                                                                                                                                     
(swarm-2) Check network to re-create if needed...                                                                                                                                
(swarm-2) Waiting for an IP...                                                                                                                                                   
Waiting for machine to be running, this may take a few minutes...                                                                                                                
Detecting operating system of created instance...                                                                                                                                
Waiting for SSH to be available...                                                                                                                                               
Detecting the provisioner...                                                                                                                                                     
Provisioning with boot2docker...                                                                                                                                                 
Copying certs to the local machine directory...                                                                                                                                  
Copying certs to the remote machine...                                                                                                                                           
Setting Docker configuration on the remote daemon...                                                                                                                             
                                                                                                                                                                                 
This machine has been allocated an IP address, but Docker Machine could not                                                                                                      
reach it successfully.                                                                                                                                                           
                                                                                                                                                                                 
SSH for the machine should still work, but connecting to exposed ports, such as                                                                                                  
the Docker daemon port (usually <ip>:2376), may not work properly.                                                                                                               
                                                                                                                                                                                 
You may need to add the route manually, or use another related workaround.                                                                                                       
                                                                                                                                                                                 
This could be due to a VPN, proxy, or host file configuration issue.                                                                                                             
                                                                                                                                                                                 
You also might want to clear any VirtualBox host only interfaces you are not using.                                                                                              
Checking connection to Docker...                                                                                                                                                 
Docker is up and running!                                                                                                                                                        
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm-2               
Running pre-create checks...                                                                                                                                                     
Creating machine...                                                                                                                                                              
(swarm-3) Copying C:\Users\senya\.docker\machine\cache\boot2docker.iso to C:\Users\senya\.docker\machine\machines\swarm-3\boot2docker.iso...                                     
(swarm-3) Creating VirtualBox VM...                                                                                                                                              
(swarm-3) Creating SSH key...                                                                                                                                                    
(swarm-3) Starting the VM...                                                                                                                                                     
(swarm-3) Check network to re-create if needed...                                                                                                                                
(swarm-3) Waiting for an IP...                                                                                                                                                   
Waiting for machine to be running, this may take a few minutes...                                                                                                                
Detecting operating system of created instance...                                                                                                                                
Waiting for SSH to be available...                                                                                                                                               
Detecting the provisioner...                                                                                                                                                     
Provisioning with boot2docker...                                                                                                                                                 
Copying certs to the local machine directory...                                                                                                                                  
Copying certs to the remote machine...                                                                                                                                           
Setting Docker configuration on the remote daemon...                                                                                                                             
                                                                                                                                                                                 
This machine has been allocated an IP address, but Docker Machine could not                                                                                                      
reach it successfully.                                                                                                                                                           
                                                                                                                                                                                 
SSH for the machine should still work, but connecting to exposed ports, such as                                                                                                  
the Docker daemon port (usually <ip>:2376), may not work properly.                                                                                                               
                                                                                                                                                                                 
You may need to add the route manually, or use another related workaround.                                                                                                       
                                                                                                                                                                                 
This could be due to a VPN, proxy, or host file configuration issue.                                                                                                             
                                                                                                                                                                                 
You also might want to clear any VirtualBox host only interfaces you are not using.                                                                                              
Checking connection to Docker...                                                                                                                                                 
Docker is up and running!                                                                                                                                                        
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env swarm-3               
Swarm initialized: current node (qjsxnk75a5ijvladw7jyrtdws) is now a manager.                                                                                                    
                                                                                                                                                                                 
To add a worker to this swarm, run the following command:                                                                                                                        
                                                                                                                                                                                 
    docker swarm join --token SWMTKN-1-430w1d1bgncv22es9rzgy1jbcldv8m62tu72icqsg4f24dlimy-28s098gnh6h6644h68wagqt7o 192.168.99.104:2377                                          
                                                                                                                                                                                 
To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.                                                                               
                                                                                                                                                                                 
This node joined a swarm as a worker.                                                                                                                                            
This node joined a swarm as a worker.                                                                                                                                            
w8p5s3ihjylq8gi4gx5352zdn                                                                                                                                                        
Since --detach=false was not specified, tasks will be created in the background.                                                                                                 
In a future release, --detach=false will become the default.  

$ docker-machine ls                                                                                                  
NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS                   
default   -        virtualbox   Running   tcp://192.168.99.103:2376           v17.09.0-ce                            
swarm-1   *        virtualbox   Running   tcp://192.168.99.104:2376           v17.09.0-ce                            
swarm-2   -        virtualbox   Running   tcp://192.168.99.105:2376           v17.09.0-ce                            
swarm-3   -        virtualbox   Running   tcp://192.168.99.106:2376           v17.09.0-ce                            
                                                                                                                     
Check the Visualizer at http://http://192.168.99.104:8000/                                                                                                                   
                                                                                                                                                                                 
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)  

$ docker network create -d overlay --opt encrypted names-demo                                                                                                                                                                                            
Error response from daemon: This node is not a swarm manager. Use "docker swarm init" or "docker swarm join" to connect this node to swarm and try again.               
                                                                                                                                                                        
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)                                                                          
$ eval `docker-machine env swarm-1`                                                                                                                                     
                                                                                                                                                                        
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)                                                                          
$ docker network create -d overlay --opt encrypted names-demo                                                                                                           
64ipvqnhgbw3gnr9i1bxk6b0g                                                                                                                                               
                                                                                                                                                                        
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)                                                                          
$ docker network ls                                                                                                                                                     
NETWORK ID          NAME                DRIVER              SCOPE                                                                                                       
1391cafdc73e        bridge              bridge              local                                                                                                       
37c4d73668d0        docker_gwbridge     bridge              local                                                                                                       
bf96313cf139        host                host                local                                                                                                       
nksr0qqqwjy4        ingress             overlay             swarm                                                                                                       
64ipvqnhgbw3        names-demo          overlay             swarm                                                                                                       
f6b6a72dc53e        none                null                local                                                                                                       
                                                                                                                                                                        
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)                                                                          
$                                                                                                                                                                       
$ docker service create --name mongodb --network names-demo mongo:3.2.15
lkynibehke5t4814svwxco8h1
Since --detach=false was not specified, tasks will be created in the background.
In a future release, --detach=false will become the default.

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source (master)
$ docker service ps mongodb
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE           ERROR               PORTS
rrovkryovtun        mongodb.1           mongo:3.2.15        swarm-2             Running             Running 5 seconds ago                                                                                                                                                                        
                                                                                                                                                                        
$  docker service create --name names-demo --network names-demo -e DB=mongodb -p 8080:8080  sleyzezon/names-demo                                                                                                                                                   
mz9nthdoibxkupn2u1j26jqy3                                                                                                     
Since --detach=false was not specified, tasks will be created in the background.                                              
In a future release, --detach=false will become the default.                                                                  
                                                                                                                              
Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source/names (master)                          
$ docker images                                                                                                               
REPOSITORY                 TAG                 IMAGE ID            CREATED             SIZE                                   
sleyzezon/names-demo       latest              161b1c6a660c        2 minutes ago       18.5MB                                 
<none>                     <none>              2781a497395c        2 minutes ago       309MB                                  
golang                     alpine              107ed76bfbd2        4 days ago          270MB                                  
dockersamples/visualizer   <none>              8ca809a94e1e        2 weeks ago         148MB                                  
alpine                     latest              76da55c8019d        3 weeks ago         3.97MB                                 
                                                                                                                       
																																										
																																										
																																										
Docker will use service discovery mechanism to point to mongodb container (names-demo -> mongodb) specified via DB environment variable.  

$ docker service ls                                                                                                                  
ID                  NAME                MODE                REPLICAS            IMAGE                             PORTS                                                                                                                                                                                    
lkynibehke5t        mongodb             replicated          1/1                 mongo:3.2.15                                         
mz9nthdoibxk        names-demo          replicated          1/1                 sleyzezon/names-demo:latest       *:8080->8080/tcp   
w8p5s3ihjylq        visualizer          replicated          1/1                 dockersamples/visualizer:latest   *:8000->8080/tcp   

Simeon@LAPTOP-P0PO4U7C MSYS ~/source/docker-swarm-course/chapter-3/section-3.1/source/names (master)
$ docker service ps names-demo
ID                  NAME                IMAGE                         NODE                DESIRED STATE       CURRENT STATE           ERROR               PORTS
mf0p1iu5z86n        names-demo.1        sleyzezon/names-demo:latest   swarm-3             Running             Running 7 minutes ago

